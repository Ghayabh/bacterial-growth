<methods>
<method name="Gamma_T" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="14" hits="3" branch="false"/>
<line number="15" hits="3" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="14" hits="3" branch="false"/>
<line number="15" hits="3" branch="false"/>
</lines>
</class>
<class name="Gamma_T_pH_aw.R" filename="R/Gamma_T_pH_aw.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="Gamma_T_pH_aw" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="22" hits="3" branch="false"/>
<line number="23" hits="3" branch="false"/>
<line number="24" hits="3" branch="false"/>
<line number="25" hits="3" branch="false"/>
<line number="26" hits="3" branch="false"/>
<line number="27" hits="3" branch="false"/>
<line number="28" hits="3" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="22" hits="3" branch="false"/>
<line number="23" hits="3" branch="false"/>
<line number="24" hits="3" branch="false"/>
<line number="25" hits="3" branch="false"/>
<line number="26" hits="3" branch="false"/>
<line number="27" hits="3" branch="false"/>
<line number="28" hits="3" branch="false"/>
</lines>
</class>
<class name="modBaran.R" filename="R/modBaran.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="modBaran" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="15" hits="3" branch="false"/>
<line number="16" hits="3" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="15" hits="3" branch="false"/>
<line number="16" hits="3" branch="false"/>
</lines>
</class>
<class name="modrosso.R" filename="R/modrosso.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="modrosso" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="14" hits="3" branch="false"/>
<line number="15" hits="3" branch="false"/>
<line number="16" hits="3" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="14" hits="3" branch="false"/>
<line number="15" hits="3" branch="false"/>
<line number="16" hits="3" branch="false"/>
</lines>
</class>
<class name="Proba_aw.R" filename="R/Proba_aw.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="Proba_aw" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="15" hits="6" branch="false"/>
<line number="16" hits="6" branch="false"/>
<line number="19" hits="6" branch="false"/>
<line number="20" hits="1" branch="false"/>
<line number="23" hits="5" branch="false"/>
<line number="24" hits="1" branch="false"/>
<line number="26" hits="4" branch="false"/>
<line number="29" hits="6" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="15" hits="6" branch="false"/>
<line number="16" hits="6" branch="false"/>
<line number="19" hits="6" branch="false"/>
<line number="20" hits="1" branch="false"/>
<line number="23" hits="5" branch="false"/>
<line number="24" hits="1" branch="false"/>
<line number="26" hits="4" branch="false"/>
<line number="29" hits="6" branch="false"/>
</lines>
</class>
<class name="Proba_c.R" filename="R/Proba_c.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="Proba_c" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="21" hits="3" branch="false"/>
<line number="22" hits="3" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="21" hits="3" branch="false"/>
<line number="22" hits="3" branch="false"/>
</lines>
</class>
<class name="Proba_pH.R" filename="R/Proba_pH.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="Proba_pH" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="15" hits="6" branch="false"/>
<line number="16" hits="6" branch="false"/>
<line number="19" hits="6" branch="false"/>
<line number="20" hits="1" branch="false"/>
<line number="24" hits="5" branch="false"/>
<line number="25" hits="1" branch="false"/>
<line number="27" hits="4" branch="false"/>
<line number="30" hits="6" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="15" hits="6" branch="false"/>
<line number="16" hits="6" branch="false"/>
<line number="19" hits="6" branch="false"/>
<line number="20" hits="1" branch="false"/>
<line number="24" hits="5" branch="false"/>
<line number="25" hits="1" branch="false"/>
<line number="27" hits="4" branch="false"/>
<line number="30" hits="6" branch="false"/>
</lines>
</class>
<class name="Proba_T.R" filename="R/Proba_T.R" line-rate="1" branch-rate="0" complexity="0">
<methods>
<method name="Proba_T" signature="" line-rate="1" branch-rate="0">
<lines>
<line number="15" hits="6" branch="false"/>
<line number="16" hits="6" branch="false"/>
<line number="18" hits="6" branch="false"/>
<line number="19" hits="2" branch="false"/>
<line number="22" hits="4" branch="false"/>
<line number="23" hits="2" branch="false"/>
<line number="26" hits="2" branch="false"/>
<line number="28" hits="6" branch="false"/>
</lines>
</method>
</methods>
<lines>
<line number="15" hits="6" branch="false"/>
<line number="16" hits="6" branch="false"/>
<line number="18" hits="6" branch="false"/>
<line number="19" hits="2" branch="false"/>
<line number="22" hits="4" branch="false"/>
<line number="23" hits="2" branch="false"/>
<line number="26" hits="2" branch="false"/>
<line number="28" hits="6" branch="false"/>
</lines>
</class>
</classes>
</package>
</packages>
</coverage>
covr::package_coverage()
devtools::check()
devtools::check()
library(covr)
report()
code_coverage()
code_coverage('test')
codetools::checkUsage()
codetools::checkUsageEnv()
package_coverage()
devtools::test_coverage()
devtools::test_file()
devtools::test_coverage_file()
devtools::test_coverage_file(`tests/testthat/` Proba_T)
devtools::test_coverage_file(`tests/testthat/Proba_T')
devtools::test_coverage_file(`tests/testthat/Proba_T'))
devtools::test_coverage_file('R/Proba_T.`tests/testthat/Proba_T'))
devtools::test()
test_path(Proba_pH(5,pHinf=4.34,pHsup=5.93))
Proba_pH(5,4.34,5.93)
devtools::test()
devtools::check()
library(covr)
report()
covr::package_coverage()
Proba_pH(5,4.34,5.93)
Proba_pH(c(5,6,7),4.34,5.93)
Proba_pH(c(7,7,7),4.34,5.93)
Proba_pH(c(4,5,7),4.34,5.93)
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:i])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[i])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:i])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[1:i]<-(exp(T[1:i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:i])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:length(T)])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
i<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:length(T)])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:length(T)])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]<-0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]<-1
}
else
proba_T_Aug[i]<<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:length(T)])
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]<-0
print(proba_T_Aug[i])
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]<-1
print(proba_T_Aug[i])
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug[1:length(T)])
print(proba_T_Aug)
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
if (T[i]<=Tinf){
proba_T_Aug[i]<-0
print(proba_T_Aug[i])
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]<-1
print(proba_T_Aug[i])
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}}
return(proba_T_Aug[1:length(T)])
print(proba_T_Aug)
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
#' @param Tinf The theoritical cellular minimal temperature for growth #a number
#' @param Tsup The theoritical cellular maximal temperature for growth #a number
#' @param c a parameter #a number
#'
#' @return proba_T_Aug The single-cell growth probability, which increases from O to 1 when temperature value increases at a more favorable condition #a number
#' @export
#'
#' @examples
#' Proba_T(T=10,Tinf=-3.6,Tsup=17.3,c=7.6) the values of Tinf,Tsup & c were imported from Augustin's 2012 review
#' Proba_T(T=20,Tinf=-3.6,Tsup=17.3,c=7.6)
Proba_T<- function(T,Tinf,Tsup,c) {
proba_T_Aug<-c()
for (i in 1:length(T)) {
if (T[i]<=Tinf){
proba_T_Aug[i]<-0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]<-1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}}
return(proba_T_Aug)
}
Proba_T(c(10,20,-4),-3.6,17.3,7.6)
devtools::test()
devtools::check()
#' @param mumax maximum growth rate # a number
#' @param lag lag time # a number
#' @param log10N0 Initial population density #a number
#' @param log10Nmax maximum population density # a number
#'
#' @return log10N #a number
#' @export
#'
#' @examples
#' modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5 )
modBaran<- function(temp,mumax,lag,log10N0,log10Nmax){
log10N<-(log10Nmax-log10(1+((10^(log10Nmax-log10N0))-1)/(1-exp(-mumax*lag)+exp(-mumax*(lag-temp)))))
return(log10N)
}
modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5 )
