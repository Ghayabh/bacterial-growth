log10N<-log10Nmax
}
}
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
return(log10N)
}
modBuchanan1(seq(0,20,0.5),24,1,9,0.5,4)
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
return(log10N)
}
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
}
return(log10N)
}
modBuchanan1(seq(0,20,0.5),24,1,9,0.5,4)
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
return(log10N[i])
}
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
return(log10N[i])
}
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
return(log10N[i])
}
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp-lag)
return(log10N[i])
}
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp[i]-lag)
return(log10N[i])
}
modBuchanan1(seq(0,20,0.5),24,1,9,0.5,4)
=
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp[i]-lag)
return(log10N[i])
}
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp[i]-lag)
return(log10N[i])
}
}
modBuchanan1(seq(0,20,0.5),24,1,9,0.5,4)
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
{if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N[i]<- log10N0+mumax*(temp[i]-lag)
}
}
return(log10N[i])
}
modBuchanan1(seq(0,20,0.5),24,1,9,0.5,4)
}
Proba_aw<-function(aw,awinf,awsup){
proba_aw_Aug<-c()
for (i in 1:length(aw)) {
if (aw[i]<=awinf){
proba_aw_Aug[i]=0
}
else
{if(aw[i]>=awsup){
proba_aw_Aug[i]=1
}else
proba_aw_Aug[i]<-(aw[i]-awinf)/(awsup-awinf)
}}
return(proba_aw_Aug)
}
modBuchanan1(1,24,1,9,0.5,4)
modBuchanan1(48,24,1,9,0.5,4)
modBuchanan1(seq(0,24),24,1,9,0.5,4)
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
{if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
{log10N[i]<- log10N0+mumax*(temp[i]-lag)
}
}
}
return(log10N[i])
}
modBuchanan1(seq(0,24),24,1,9,0.5,4)
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
{if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N<- log10N0+mumax*(temp[i]-lag)
}
}
return(log10N[i])
}
modBuchanan1(seq(0,24),24,1,9,0.5,4)
temp<-seq(0,24,0.5)
modBuchanan1(temp,24,1,9,0.5,4)
data<-tibble(temp,modBuchanan(temp,24,1,9,0.5,4))
data<-tibble(temp,modBuchanan(24,1,9,0.5,4))
data
data<-tibble(temp,modBuchanan1(24,1,9,0.5,4))
data<-tibble(temp,modBuchanan1(temp,24,1,9,0.5,4))
data
ggplot(data, aes(x=t,y=modBuchanan1(temp,24,1,9,0.5,4)))+
geom_line()+
ylab("Log10N")+
xlab("temps en heures")+
theme_bw()
data<-tibble(temp,modBuchanan1(temp,24,1,9,0.5,4))
data
ggplot(data, aes(x=t,y=modBuchanan1(temp,24,1,9,0.5,4)))+
geom_line()+
ylab("Log10N")+
xlab("temps en heures")+
theme_bw()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
{if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N[i]<- log10N0+(mumax*(temp[i]-lag))
}
}
modBuchanan1<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-c()
for(i in 1:length(temp)){
if(temp[i]<=lag){
log10N[i]<-log10N0}
else
{if(temp[i]>=tmax){
log10N[i]<-log10Nmax
}
else
log10N[i]<- log10N0+(mumax*(temp[i]-lag))
}
}
return(log10N[i])
}
temp<-seq(0,24,0.5)
modBuchanan1(temp,24,1,9,0.5,4)
modBuchanan<-function(t,LOG10N0,LOG10Nmax,mumax,lag){
LOG10N<-LOG10N0 + (t >= lag) * (t <= (lag + (LOG10Nmax - LOG10N0) * log(10) / mumax)) *
mumax * (t - lag) / log(10) + (t >= lag) * (t>(lag + (LOG10Nmax - LOG10N0) * log(10) / mumax)) * (LOG10Nmax - LOG10N0)
return(LOG10N)
}
modBuchanan<-function(temp,log10N0,log10Nmax,mumax,lag){
log10N<-log10N0 + (temp >= lag) * (temp <= (lag + (log10Nmax - log10N0) * log(10) / mumax)) *
mumax * (temp - lag) / log(10) + (temp >= lag) * (temp>(lag + (log10Nmax - log10N0) * log(10) / mumax)) * (log10Nmax - log10N0)
return(log10N)
}
temp<-seq(0,48,0.5)
modBuchanan(temp,1,9,0.5,4)
data<-tibble(temp,modBuchanan(1,9,0.5,4))
data<-tibble(temp,modBuchanan(temp,1,9,0.5,4))
data
ggplot(data, aes(x=t,y=modBuchanan(t,1,9,0.5,4)))+
geom_line()+
ylab("Log10N")+
xlab("temps en heures")+
theme_bw()
modBuchanan2<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-(temp>lag)&(temp<tmax)*log10N0+(mumax*(temp-lag))
return(log10N)
}
temp<-seq(0,24,0.5)
modBuchanan2(temp,24,1,9,0.5,4)
modBuchanan2<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-(((temp>lag)&(temp<tmax))*log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan2(temp,24,1,9,0.5,4)
modBuchanan3<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-((((temp>lag)*log10N0) & ((temp<tmax))*log10Nmax)*log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan3(temp,24,1,9,0.5,4)
modBuchanan3<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-((((temp<=lag)*log10N0) & ((temp>=tmax))*log10Nmax)*log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan3(temp,24,1,9,0.5,4)
modBuchanan3(1,24,1,9,0.5,4)
modBuchanan3(24,24,1,9,0.5,4)
modBuchanan3<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-((((temp<=lag)*log10N0) + ((temp>=tmax))*log10Nmax) + log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan3(temp,24,1,9,0.5,4)
modBuchanan3<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-((((temp<=lag)*log10N0) & ((temp>=tmax))*log10Nmax) + log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan3(temp,24,1,9,0.5,4)
modBuchanan3<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-log10N0+(((temp>lag) & ((temp<tmax))) + log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan3(temp,24,1,9,0.5,4)
log10N<-log10N0+(((temp>lag) & ((temp<tmax)))* log10N0+(mumax*(temp-lag)))
modBuchanan3<-function(temp,tmax,log10N0,log10Nmax, mumax, lag){
log10N<-log10N0+(((temp>lag) & ((temp<tmax)))* log10N0+(mumax*(temp-lag)))
return(log10N)
}
modBuchanan3(temp,24,1,9,0.5,4)
}
modrosso<-function(temp,mumax,lag,log10N0,log10Nmax){log10N<- (temp<=lag)*log10N0+(temp>lag)*
(log10Nmax-log10(1+((10^log10Nmax/10^log10N0)-1)*exp(-mumax*(temp-lag))))
return(log10N)
}
modrosso(temp=0,mumax=0.37,lag=4,N0=100,Nmax = 10^5)
modrosso(temp=0,mumax=0.37,lag=4,log10N0=1,log10Nmax =5)
test_path(modrosso(temp=15,mumax=0.37,lag=4,log10N0=2,Nmax = 5))
library(testthat)
test_path(modrosso(temp=15,mumax=0.37,lag=4,log10N0=2,Nmax = 5))
test_path(modrosso(temp=15,mumax=0.37,lag=4,log10N0=2,logNmax = 5))
test_path(modrosso(temp=15,mumax=0.37,lag=4,log10N0=2,log10Nmax= 5))
}
#' @param mumax maximum growth rate # a number
#' @param lag lag time # a number
#' @param log10N0 Initial population density #a number
#' @param log10Nmax maximum population density # a number
#'
#' @return log10N #a number
#' @export
#'
#' @examples
#' modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5 )
modBaran<- function(temp,mumax,lag,log10N0,log10Nmax){
modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5 )
test_path(modrosso(temp=15,mum))
)
modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5 )
modBaran<- function(temp,mumax,lag,log10N0,log10Nmax){
log10N<-(log10Nmax-log10(1+((10^(log10Nmax-log10N0))-1)/(1-exp(-mumax*lag)+exp(-mumax*(lag-temp)))))
return(log10N)
}
modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5 )
library(bacterialgrowth)
---
title: "Bacterialgrowth"
author: "Ghaya Ben Hmidene"
date: "`r Sys.Date(10/11/2020)`"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{Vignette Title}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
---
title: "Bacterialgrowth"
author: "Ghaya Ben Hmidene"
date: "10/11/2020"
output: rmarkdown::html_vignette
vignette: >
%\VignetteIndexEntry{Vignette Title}
%\VignetteEngine{knitr::rmarkdown}
%\VignetteEncoding{UTF-8}
---
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
devtools::build_vignettes())
devtools::build_vignettes()
browseVignettes("bacterialgrowth")
R CMD Rd2pdf <Package directory>
RCMD Rd2pdf <Package directory>
RCMDRd2pdf<Package directory>
RCMDRd2pdf<Package directory>
library(devtools)
build(vignettes = T, manual = T)
browseVignettes()
browseVignettes()
browseVignettes('bacterialgrowth')
browseVignettes('bioinactivation')
usethis::use_vignette('bacterialgrowth')
library(bacterialgrowth)
The R package Bacterialgrowth provides mathematical functions based on predictive microbiology models published in the literature by various researchers. This package allows users to model the growth of pathogenic microorganisms and to fit data to primary and secondary growth models. It can be downloaded from CRAN and loaded using the following command:
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#' @param temp
#' @param log10N0
#' @param log10Nmax
#' @param mumax
#' @param lag
#'
#' @return
#' @export
#'
#' @examples
modBuchanan<-function(temp,log10N0,log10Nmax,mumax,lag){
log10N<-log10N0 + (temp >= lag) * (temp <= (lag + (log10Nmax - log10N0) * log(10) / mumax)) *
mumax * (temp - lag) / log(10) + (temp >= lag) * (temp>(lag + (log10Nmax - log10N0) * log(10) / mumax)) * (log10Nmax - log10N0)
return(log10N)
}
modBuchanan(temp,1,9,0.5,4)
library(tidyverse)
library(ggplot2)
temp<-seq(0,48,0.5)
modBuchanan(temp,1,9,0.5,4)
library(tidyverse)
library(ggplot2)
data<-tibble(temp,modBuchanan(temp,1,9,0.5,4))
data
ggplot(data, aes(x=t,y=modBuchanan(t,1,9,0.5,4)))+
geom_line()+
ylab("Log10N")+
xlab("temps en heures")+
theme_bw()
temp<-seq(0,48,0.5)
modBuchanan(temp,1,9,0.5,4)
library(tidyverse)
library(ggplot2)
data<-tibble(temp,modBuchanan(temp,1,9,0.5,4))
data
ggplot(data, aes(x=t,y=modBuchanan(t,1,9,0.5,4)))+
geom_line()+
ylab("Log10N")+
xlab("temps en heures")+
theme_bw()
temp<-seq(0,48,0.5)
modBuchanan(temp,1,9,0.5,4)
library(tidyverse)
library(ggplot2)
data<-tibble(temp,modBuchanan(temp,1,9,0.5,4))
data
ggplot(data, aes(x=t,y=modBuchanan(t,1,9,0.5,4)))+
geom_line()+
ylab("Log10N")+
xlab("temps en heures")+
theme_bw()
library(deSolve)
#' The differential form of the predictive growth model developed by Baranyi & Roberts in 1994, to predict microbial growth in food environments.
#' @details
#' \deqn{\begin{equation}d y=\operatorname{mu_{max}}^{*}(1-(y / y_{max} ))^{*} y\end{equation}}
#' @import deSolve
#' @param t time vector
#' @param state initial values of y  for the first time value.
#' @param parameters parameter list
#'
#' @return dy
#' @export
#'
#' @examples
#'library (deSolve)
#'state<-c(y=15)
#'time<-seq(0,70, 1)
#'parameters<- c(mumax=1, ymax=10000)
#'out_baranyi_without_lag<-ode(y = state, times = time, func = baranyi_diff_without_lag, parms = parameters)
#'plot(time,log10(out_baranyi_without_lag[,"y"]),lty=1,col='red')
baranyi_diff_without_lag<-function(t,state,parameters){
with(
as.list(c(state,parameters)),{
dy<-mumax*(1-(y/ymax))*y
return(list(c(dy)))
}
)
}
)
library(deSolve)
#' The differential form of the predictive growth model developed by Baranyi & Roberts in 1994, to predict microbial growth in food environments.
#' @details
#' \deqn{\begin{equation}d y=\operatorname{mu_{max}}^{*}(1-(y / y_{max} ))^{*} y\end{equation}}
#' @import deSolve
#' @param t time vector
#' @param state initial values of y  for the first time value.
#' @param parameters parameter list
#'
#' @return dy
#' @export
#'
#' @examples
#'library (deSolve)
#'state<-c(y=15)
#'time<-seq(0,70, 1)
#'parameters<- c(mumax=1, ymax=10000)
#'out_baranyi_without_lag<-ode(y = state, times = time, func = baranyi_diff_without_lag, parms = parameters)
#'plot(time,log10(out_baranyi_without_lag[,"y"]),lty=1,col='red')
baranyi_diff_without_lag<-function(t,state,parameters){
with(
as.list(c(state,parameters)),{
dy<-mumax*(1-(y/ymax))*y
return(list(c(dy)))
}
)
}
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
$$
$$
$$
The most commonly used primary growth models have been implemented in this package such as:
-	The Buchanan model(1914): It is the first primary growth model that has been described in predictive microbiology. It can be used as a first approach to estimate the evolution of the number of microorganisms according to a pessimistic scenario.
$$
\mathrm{SCT}=\sum_{i=1}^{k} \sum_{j=1}^{n_{j}}\left(y_{i j}-\bar{y}\right)^{2}
$$
```
