devtools::check()
library(pmicrobiologyfunction)
pmicrobiologyfunction::modBaran(temp=seq(0,48,1), mumax = 0.037, lag=6, log10N0 = 10, log10Nmax = 5 )
library(pmicrobiologyfunction)
devtools::check()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/g.benhmidene/Desktop/pmicrobiologyfunction/R/Gamma_pH_4p.R', echo=TRUE)
source('C:/Users/g.benhmidene/Desktop/pmicrobiologyfunction/R/Gamma_pH_4p.R', echo=TRUE)
source('C:/Users/g.benhmidene/Desktop/pmicrobiologyfunction/R/Gamma_pH_4p.R', echo=TRUE)
source('C:/Users/g.benhmidene/Desktop/pmicrobiologyfunction/R/Gamma_pH_4p.R', echo=TRUE)
Gamma_pH_4p(5,4,9,0.5,7)
library(pmicrobiologyfunction)
library(pmicrobiologyfunction)
return((sqrtmumax^2))
##this function describes the variation of mu max using this formula
##"cpm_aw_2p" <- as.formula(sqrtmumax ~ sqrt((aw >= awmin) * muopt * (aw - awmin)^2 / (1 - awmin)^2))
##Inputs : aw,awmin,muopt
##Fonction
Gamma_aw_2p <- function(aw,awmin,muopt)
{sqrtmumax <- sqrt((aw >= awmin) * muopt * (aw - awmin)^2 / (1 - awmin)^2)
return((sqrtmumax^2))
}
Gamma_aw_2p(0.92,0.90,0,97)
Gamma_aw_2p(0.92,0.90,0.97)
library(pmicrobiologyfunction)
#' this function of secondary growth model describe the evolution of the square root of the maximum specific growth rate (sqrtmumax) as a function of water activity (aw), This is a symetric cardinal pH model developped by Rosso & Robinson in 2001 with three parameters (awmin, awopt, muopt)
#' @param aw water activity #a number
#' @param awmin minimal growth water activity # a number
#' @param awopt optimal growth water activity # a number
#' @param muopt Optimal growth rate # a number # a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
Gamma_aw_3p<-function(aw,awmin,awopt,muopt)
{ sqrtmumax <- sqrt((aw >= awmin) * muopt * (aw - 1)*(aw - awmin)^2 / ((awopt - awmin) * (awopt - awmin) * (aw - awopt) - (awopt - 1) * (awopt + awmin - 2.0 * aw)))
return((sqrtmumax ^ 2))
}
Gamma_aw_3p(0.95,0.90, 0.98, 0.5)
#' @param awmin Minimal growth water activity # a number
#' @param awmax Maximal growth water activity # a number
#' @param awopt Optimal growth water activity # a number
#' @param muopt Optimal growth rate # a number # a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
#'
Gamma_T_pH_aw <- function(T,Tmin,Tmax,Topt,pH,pHmin,pHmax,pHopt,aw,awmin,awmax,awopt,muopt)
{sqrtmumax<-sqrt(((T >= Tmin) & (T <= Tmax) & (pH >= pHmin) & (pH <= (pHmax)) & (aw >= awmin))
* muopt * (T-Tmax) * (T - Tmin)^2 / ((Topt - Tmin) *
((Topt - Tmin) * (T - Topt) - (Topt - Tmax) * (Topt + Tmin - 2.0 * T)))
* (pH - pHmin) * (pH - pHmax) / ((pH - pHmin) * (pH - pHmax) - (pH - pHopt)^2)
* (aw - 1) * (aw - awmin)^2 / ((awopt - awmin) * ((awopt - awmin) * (aw - awopt) - (awopt - 1)
* (awopt + awmin - 2.0 * aw))))
return((sqrtmumax ^ 2))
}
Gamma_T_pH_aw(10,4,45,37,5,4,9,7,0.92,0.90,0.98,0.97,0.5)
Proba_T<- function(T,Tinf,Tsup,c) {
Tinf<--3.6
Tsup<-17.3
c<-7.6
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug)
}
Proba_T<- function(T,Tinf,Tsup,c) {
Tinf<--3.6
Tsup<-17.3
c<-7.6
proba_T_Aug<-c()
for (i in 1:length(T)) {
}
if (T[i]<=Tinf){
proba_T_Aug[i]=0
}
else
{if(T[i]>=Tsup){
proba_T_Aug[i]=1
}
else
proba_T_Aug[i]<-(exp(T[i]/c)-exp(Tinf/c))/(exp(Tsup/c)-exp(Tinf/c))
}
return(proba_T_Aug)
}
Proba_T(-4,Tinf,Tsup,c)
Proba_T(20,Tinf,Tsup,c)
Proba_T(-4,Tinf,Tsup,c)
Proba_T(20,Tinf,Tsup,c)
library(pmicrobiologyfunction)
library(pmicrobiologyfunction)
Proba_pH<-function(pH,pHinf,pHsup){
pHinf<-4.34
pHsup<-5.93
proba_pH_Aug<-c()
for (i in 1:length(pH)) {
}
if(pH[i]<=pHinf){
proba_pH_Aug[i]=0
}
else
{if(pH[i]>=pHsup){
proba_pH_Aug[i]=1
} else
proba_pH_Aug[i]<-  (exp(-pH[i])-exp(-pHinf))/(exp(-pHsup)-exp(-pHinf))
}
return(proba_pH_Aug)
}
Proba_pH<-function(pH,pHinf,pHsup){
pHinf<-4.34
pHsup<-5.93
proba_pH_Aug<-c()
for (i in 1:length(pH)) {
}
if(pH[i]<=pHinf){
proba_pH_Aug[i]=0
}
else
{if(pH[i]>=pHsup){
proba_pH_Aug[i]=1
} else
proba_pH_Aug[i]<-  (exp(-pH[i])-exp(-pHinf))/(exp(-pHsup)-exp(-pHinf))
}
return(proba_pH_Aug)
}
Proba_pH(5,pHinf,pHsup)
Proba_pH(4,pHinf,pHsup)
Proba_pH(7,pHinf,pHsup)
R CMD check
devtools::check()
Proba_aw<-function(aw,awinf,awsup){
awinf<-0.917
awsup<-0.988
proba_aw_Aug<-c()
for (i in 1:length(aw)) {
}
if (aw[i]<=awinf){
proba_aw_Aug[i]=0
}
else
{if(aw[i]>=awsup){
proba_aw_Aug[i]=1
}else
proba_aw_Aug[i]<-(aw[i]-awinf)/(awsup-awinf)
}
return(proba_aw_Aug)
}
#Proba_aw(aw=0.95,awinf = 0.917,awsup = 0.988)
#Proba_aw(aw=0.95,awinf = 0.917,awsup = 0.988)
Proba_aw(0,90,awinf,awsup)
#Proba_aw(aw=0.95,awinf = 0.917,awsup = 0.988)
Proba_aw(0.90,awinf,awsup)
Proba_aw(0,99,awin,awsup)
Proba_aw(0.99,awin,awsup)
##Proba_c
Proba_c <- function(T,Tmin,Tmax,ph,phmin,phmax,aw,awmin,awmax){
Pc<-(Proba_T(T,Tmin,Tmax,7.6)*Proba_pH(ph,Phmin,pHmax)*Proba_aw(aw,awmin,awmax))
return(Pc)
}
Proba_c(10,Tmin,Tmax,5,phmin,phmax,0.91,awmin,awmax)
Proba_c(10,Tmin,Tmax,5,phmin,phmax,0.95,awmin,awmax)
##Proba_c
Proba_c <- function(T,Tmin,Tmax,ph,phmin,phmax,aw,awmin,awmax){
Pc<-(Proba_T(T,Tmin,Tmax,7.6)*Proba_pH(ph,phmin,phmax)*Proba_aw(aw,awmin,awmax))
return(Pc)
}
Proba_c(10,Tmin,Tmax,5,phmin,phmax,0.95,awmin,awmax)
##Proba_c
Proba_c <- function(T,Tinf,Tsup,pH,pHinf,pHsup,aw,awinf,awsup){
Pc<-(Proba_T(T,Tinf,Tsup,7.6)*Proba_pH(pH,pHinf,pHsup)*Proba_aw(aw,awinf,awsup))
return(Pc)
}
Proba_c(10,Tinf,Tsup,5,pHinf,pHsup,0.95,awinf,awsup)
library(pmicrobiologyfunction)
library(pmicrobiologyfunction)
pmicrobiologyfunction:: Proba_c(15,Tinf, Tsup,5,pHinf,pHsup,0.96,awinf,awsup)
library(pmicrobiologyfunction)
library(pmicrobiologyfunction)
pmicrobiologyfunction::modBaran(temp=seq(0,24,0.5), mumax = 0.037, lag=4, log10N0 = 1, log10Nmax = 5)
pmicrobiologyfunction::Proba_T(10,Tinf,Tsup)
pmicrobiologyfunction::Proba_T(10,Tinf = -5,Tsup)
devtools::check()
#' @param pHsup The cellular maximal pH for growth # a number
#' @param aw water activity value #a number
#' @param awinf The cellular minimal value of aw for growth # a number
#' @param awsup The cellular maximal value of aw for growth # a number
#'
#' @return Pc The single-cell growth probability as function of environemental factors # a number
#' @export
#'
#' @examples
#' Proba_c(10,Tinf,Tsup,5,pHinf,pHsup,0.95,awinf,awsup)
Proba_c <- function(T,Tinf,Tsup,pH,pHinf,pHsup,aw,awinf,awsup){
Pc<-(Proba_T(T,Tinf,Tsup,7.6)*Proba_pH(pH,pHinf,pHsup)*Proba_aw(aw,awinf,awsup))
return(Pc)
}
library(pmicrobiologyfunction)
library(pmicrobiologyfunction)
?Proba_T
usethis::use_build_ignore("devtools_history.R")
usethis::use_package("nlsmicrobio")
usethis::use_package("nlsMicrobio")
library(pmicrobiologyfunction)
library(pmicrobiologyfunction)
libraryy(pmicrobiologyfunction)
library(pmicrobiologyfunction)
?modBaran
?Proba_T
install.packages("bioinactivation")
library(nlsMicrobio)
?jameson_baranyi
jameson_baranyi
jameson_buchanan
library(pmicrobiologyfunction)
?Proba_aw
library(pmicrobiologyfunction)
?Proba_aw
library(pmicrobiologyfunction)
usethis::use_package("ggplot2")
#'
#' @param pH # a number
#' @param pHmin Minimal growth pH #a number
#' @param pHopt Optimal growth pH #a number
#' @param muopt Optimal growth rate # a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
Gamma_pH_3p <- function(pH,pHmin,muopt,pHopt)
{sqrtmumax<-sqrt(((pH >= pHmin) & pH <= (((2 * pHopt )- pHmin)) * muopt
* (pH - pHmin) * (pH - ((2 * pHopt) - pHmin)) / ((pH - pHmin) * (pH - ((2 * pHopt) - pHmin)) - (pH - pHopt)^2)))
return((sqrtmumax^2))
}
Gamma_pH_3p(5,4,0.5,6)
Gamma_pH_3p(3,4,1,7)
Gamma_pH_3p(5,4,2,7)
Gamma_pH_3p(3,4,5,7)
cpm_pH_3p
#'
#' @param pH # a number
#' @param pHmin Minimal growth pH #a number
#' @param pHopt Optimal growth pH #a number
#' @param muopt Optimal growth rate # a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
Gamma_pH_3p <- function(pH,pHmin,muopt,pHopt)
{sqrtmumax<-sqrt(((pH >= pHmin) & (pH <=(((2 * pHopt )- pHmin))) * muopt
* (pH - pHmin) * (pH - ((2 * pHopt) - pHmin)) / ((pH - pHmin) * (pH - ((2 * pHopt) - pHmin)) - (pH - pHopt)^2)))
return((sqrtmumax^2))
}
#' @param pHmin minimal groMh pH #a number
#' @param pHmax Maximal growth pH #a number
#' @param muopt Optimal growth rate # a number
#' @param pHopt Optimal growth pH #a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
#' Gamma_pH_4p(5,4,9,0.5,7)
Gamma_pH_4p<- function(pH,pHmin,pHmax,muopt,pHopt)
{sqrtmumax<-sqrt(((pH >= pHmin) & (pH <= pHmax)) * muopt
*(pH - pHmin) * (pH - pHmax) / ((pH - pHmin) * (pH - pHmax) - (pH - pHopt)^2))
return((sqrtmumax^2))
}
Gamma_pH_3p()
cpm_pH_3p
#'
#' @param pH # a number
#' @param pHmin Minimal growth pH #a number
#' @param pHopt Optimal growth pH #a number
#' @param muopt Optimal growth rate # a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
Gamma_pH_3p <- function(pH,pHmin,muopt,pHopt)
{sqrtmumax<-sqrt(((pH >= pHmin) & (pH <=(2 * pHopt- pHmin)) * muopt
* (pH - pHmin) * (pH - ((2 * pHopt) - pHmin)) / ((pH - pHmin) * (pH - ((2 * pHopt) - pHmin)) - (pH - pHopt)^2)))
return((sqrtmumax^2))
}
source('C:/Users/g.benhmidene/Desktop/pmicrobiologyfunction/R/Gamma_pH_3p.R', echo=TRUE)
Gamma_pH_3p(3,4,5,7)
Gamma_pH_3p(5,4,2,7)
Gamma_pH_3p(6,4,2,7)
Gamma_pH_3p(6,4,2,7)
Gamma_pH_3p(6,4,0.O3,7)
Gamma_pH_3p(6,4,0.03,7)
#' @param pHmin minimal groMh pH #a number
#' @param pHmax Maximal growth pH #a number
#' @param muopt Optimal growth rate # a number
#' @param pHopt Optimal growth pH #a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
#' Gamma_pH_4p(5,4,9,0.5,7)
Gamma_pH_4p<- function(pH,pHmin,pHmax,muopt,pHopt)
{sqrtmumax<-sqrt(((pH >= pHmin) & (pH <= pHmax)) * muopt
*(pH - pHmin) * (pH - pHmax) / ((pH - pHmin) * (pH - pHmax) - (pH - pHopt)^2))
return((sqrtmumax^2))
}
Gamma_pH_4p(5,4,9,2,7)
Gamma_pH_4p(5,4)
Gamma_pH_4p(5,4,9,2,7)
Gamma_aw_2p(0.92,0.90,0.97)
Gamma_aw_2p(0.91,0.9, 0.5)
Gamma_aw_2p(0.91,0.9, 0.01)
Gamma_aw_2p(0.91,0.9, 0.1)
Gamma_aw_2p(0.91,0.9, 2)
Gamma_aw_2p(0.91,0.9, 0,067)
Gamma_aw_2p(0.91,0.9, 0.067)
Gamma_aw_2p(0.91,0.9, 0.078)
Gamma_aw_2p(0.91,0.9, 0.037)
Gamma_aw_2p(0.93,0.90, 0.037)
Gamma_aw_2p(0.98,0.90, 0.037)
Gamma_aw_3p(0.95,0.90, 0.98, 0.5)
Gamma_pH_4p(5,4,9,0.5,7)
Gamma_pH_4p(5,4,9,0.06,7)
Gamma_pH_4p(5,4,9,0.5,7)
Gamma_pH_4p(5,4,9,0.5,7)
Gamma_pH_4p(5,4,9,0.037,7)
Gamma_pH_4p(6,4,9,0.037,7)
Gamma_pH_4p(6,3,9,0.037,7.5)
Gamma_pH_3p(5,3,0.05,7)
Gamma_pH_3p(5,3,1,7)
Gamma_pH_3p(5,3,0.25,7)
Gamma_aw_2p(0.92,0.90,0.97)
Gamma_aw_2p(0.92,0.90,0.097)
#'
#' @param aw water activity #a number
#' @param awmin minimal growth water activity # a number
#' @param muopt Optimal growth rate # a number # a number
#'
#' @return sqrmumax^2= mumax #maximum growth rate # a number
#' @export
#'
#' @examples
#' Gamma_aw_2p(0.92,0.90,0.097)
Gamma_aw_2p <- function(aw,awmin,muopt)
{sqrtmumax <- sqrt((aw >= awmin) * muopt * (aw - awmin)^2 / (1 - awmin)^2)
return((sqrtmumax^2))
}
Gamma_aw_2p(0.92,0.90,0.097)
Gamma_aw_2p(0.92,0.90,0.037)
Gamma_aw_3p(0.95,0.90, 0.98, 0.5)
Gamma_aw_3p(0.95,0.90, 0.98, 0.5)
Gamma_aw_3p(0.95,0.90, 0.98, 0.04)
Gamma_aw_3p(0.95,0.90, 0.99, 0.04)
Gamma_T(10,4,20,37,0.037)
Gamma_T(10,4,20,37,0.037)
Gamma_T(10,4,20,37,0.5)
Gamma_T(10,4,20,37,1)
Gamma_T(10,4,20,37,2)
Gamma_T(15,4,20,37,2)
Gamma_T(15,4,20,37,0.5)
library(devtools)
library(pmicrobiologyfunction)
install.packages("devtools")
library(devtools)
install_github("GhayaBH/pmicrobiologyfunction")
